(() => {
  const e = {
    693: (e, t, r) => { r.d(t, { Z: () => s }); const i = r(81); const n = r.n(i); const a = r(645); const o = r.n(a)()(n()); o.push([e.id, '*{box-sizing:border-box;padding:0;margin:0;font-family:Poppins, "Courier New", Courier, monospace}.btn{padding:1rem;border:0;background-color:rgba(0,0,0,0.1);color:#000;width:100%;height:100%}.btn:hover{background-color:rgba(0,0,0,0.8);color:#fff}.list{margin:10px 0 0 10px;width:90%;list-style:none;box-shadow:5px 2px 10px 2px rgba(0,0,0,0.1)}@media screen and (min-width: 992px){.list{width:600px}}.list .list-item{width:100%;border-bottom:1px solid rgba(0,0,0,0.1);padding:1rem;display:flex;justify-content:space-between;align-items:center}.list .list-item .wrapper{width:100%;display:flex;align-items:center;gap:10px}.list .list-item .wrapper .label{display:flex;width:100%;justify-content:space-between;position:relative}.list .list-item .wrapper .label .fas{position:absolute;right:10px;top:50%;transform:translateY(-50%)}.list .list-item .wrapper .label .fa-ellipsis-v{cursor:grab}.list .list-item .wrapper .label .fa-trash-alt{cursor:pointer}.list .list-item .wrapper .label .fa-trash-alt:hover{color:red}.list .list-item .wrapper .label .todo-item-description{width:100%;border:0;outline:none}.list .list-item .wrapper .label .todo-item-description:disabled{background-color:#fff;color:rgba(0,0,0,0.3);text-decoration:line-through}.list .list-item__button-wrapper{padding:0}.list .list-item .add-item{border:0;width:100%;height:100%;outline:none}.error{background-color:#fff}\n', '']); const s = o; },
    645: (e) => { e.exports = function (e) { const t = []; return t.toString = function () { return this.map(((t) => { let r = ''; const i = void 0 !== t[5]; return t[4] && (r += '@supports ('.concat(t[4], ') {')), t[2] && (r += '@media '.concat(t[2], ' {')), i && (r += '@layer'.concat(t[5].length > 0 ? ' '.concat(t[5]) : '', ' {')), r += e(t), i && (r += '}'), t[2] && (r += '}'), t[4] && (r += '}'), r; })).join(''); }, t.i = function (e, r, i, n, a) { typeof e === 'string' && (e = [[null, e, void 0]]); const o = {}; if (i) for (let s = 0; s < this.length; s++) { const l = this[s][0]; l != null && (o[l] = !0); } for (let c = 0; c < e.length; c++) { const d = [].concat(e[c]); i && o[d[0]] || (void 0 !== a && (void 0 === d[5] || (d[1] = '@layer'.concat(d[5].length > 0 ? ' '.concat(d[5]) : '', ' {').concat(d[1], '}')), d[5] = a), r && (d[2] ? (d[1] = '@media '.concat(d[2], ' {').concat(d[1], '}'), d[2] = r) : d[2] = r), n && (d[4] ? (d[1] = '@supports ('.concat(d[4], ') {').concat(d[1], '}'), d[4] = n) : d[4] = ''.concat(n)), t.push(d)); } }, t; }; },
    81: (e) => { e.exports = function (e) { return e[1]; }; },
    379: (e) => {
      const t = []; function r(e) { for (var r = -1, i = 0; i < t.length; i++) if (t[i].identifier === e) { r = i; break; } return r; } function i(e, i) {
        for (var a = {}, o = [], s = 0; s < e.length; s++) {
          const l = e[s]; const c = i.base ? l[0] + i.base : l[0]; const d = a[c] || 0; const u = ''.concat(c, ' ').concat(d); a[c] = d + 1; const p = r(u); const m = {
            css: l[1], media: l[2], sourceMap: l[3], supports: l[4], layer: l[5],
          }; if (p !== -1)t[p].references++, t[p].updater(m); else { const f = n(m, i); i.byIndex = s, t.splice(s, 0, { identifier: u, updater: f, references: 1 }); }o.push(u);
        } return o;
      } function n(e, t) { const r = t.domAPI(t); return r.update(e), function (t) { if (t) { if (t.css === e.css && t.media === e.media && t.sourceMap === e.sourceMap && t.supports === e.supports && t.layer === e.layer) return; r.update(e = t); } else r.remove(); }; }e.exports = function (e, n) { let a = i(e = e || [], n = n || {}); return function (e) { e = e || []; for (let o = 0; o < a.length; o++) { const s = r(a[o]); t[s].references--; } for (var l = i(e, n), c = 0; c < a.length; c++) { const d = r(a[c]); t[d].references === 0 && (t[d].updater(), t.splice(d, 1)); }a = l; }; };
    },
    569: (e) => { const t = {}; e.exports = function (e, r) { const i = (function (e) { if (void 0 === t[e]) { let r = document.querySelector(e); if (window.HTMLIFrameElement && r instanceof window.HTMLIFrameElement) try { r = r.contentDocument.head; } catch (e) { r = null; }t[e] = r; } return t[e]; }(e)); if (!i) throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid."); i.appendChild(r); }; },
    216: (e) => { e.exports = function (e) { const t = document.createElement('style'); return e.setAttributes(t, e.attributes), e.insert(t, e.options), t; }; },
    565: (e, t, r) => { e.exports = function (e) { const t = r.nc; t && e.setAttribute('nonce', t); }; },
    795: (e) => { e.exports = function (e) { const t = e.insertStyleElement(e); return { update(r) { !(function (e, t, r) { let i = ''; r.supports && (i += '@supports ('.concat(r.supports, ') {')), r.media && (i += '@media '.concat(r.media, ' {')); const n = void 0 !== r.layer; n && (i += '@layer'.concat(r.layer.length > 0 ? ' '.concat(r.layer) : '', ' {')), i += r.css, n && (i += '}'), r.media && (i += '}'), r.supports && (i += '}'); const a = r.sourceMap; a && typeof btoa !== 'undefined' && (i += '\n/*# sourceMappingURL=data:application/json;base64,'.concat(btoa(unescape(encodeURIComponent(JSON.stringify(a)))), ' */')), t.styleTagTransform(i, e, t.options); }(t, e, r)); }, remove() { !(function (e) { if (e.parentNode === null) return !1; e.parentNode.removeChild(e); }(t)); } }; }; },
    589: (e) => { e.exports = function (e, t) { if (t.styleSheet)t.styleSheet.cssText = e; else { for (;t.firstChild;)t.removeChild(t.firstChild); t.appendChild(document.createTextNode(e)); } }; },
  }; const t = {}; function r(i) { const n = t[i]; if (void 0 !== n) return n.exports; const a = t[i] = { id: i, exports: {} }; return e[i](a, a.exports, r), a.exports; }r.n = (e) => { const t = e && e.__esModule ? () => e.default : () => e; return r.d(t, { a: t }), t; }, r.d = (e, t) => { for (const i in t)r.o(t, i) && !r.o(e, i) && Object.defineProperty(e, i, { enumerable: !0, get: t[i] }); }, r.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t), (() => {
    const e = r(379); const t = r.n(e); const i = r(795); const n = r.n(i); const a = r(569); const o = r.n(a); const s = r(565); const l = r.n(s); const c = r(216); const d = r.n(c); const u = r(589); const p = r.n(u); const m = r(693); const f = {}; f.styleTagTransform = p(), f.setAttributes = l(), f.insert = o().bind(null, 'head'), f.domAPI = n(), f.insertStyleElement = d(), t()(m.Z, f), m.Z && m.Z.locals && m.Z.locals; class h {
      constructor(e, t, r = !1) { this.description = e, this.completed = r, this.id = t; }

      createTodoElement() { const e = document.createElement('li'); e.id = this.id, e.className = 'list-item list-item__item', e.setAttribute('aria-current', 'false'), e.innerHTML = `<div class="wrapper">\n    <input id="check"  class="checkbox" type="checkbox" name="completed">\n    <label class="label">\n      <input id="todo_item_description" class="todo-item-description" name="todoItemDescription" type="text" value="${this.description}">\n      <i class="fas fa-ellipsis-v"></i>\n    </label>\n  </div>\n  `, e.querySelector('#todo_item_description').addEventListener('change', ((e) => { e.target.value === '' && (this.list.removeFromId(e.target.id), e.target.parentNode.parentNode.parentNode.remove()); })); const t = e.querySelector('#check'); const r = e.querySelector('#todo_item_description'); return this.completed && (t.checked = !0, r.setAttribute('disabled', 'true')), t.addEventListener('change', ((e) => { this.completed = !this.completed, e.target.checked ? r.setAttribute('disabled', 'true') : e.target.checked || r.removeAttribute('disabled'); })), this.element = e, this.element; }
    } class v {
static list=[];

static uniqueId=0;

static addTodoItem(e, t = !1) { return !(e.length < 1 || (this.list.push(new h(e, t)), 0)); }

static remove(e) { return !(e < 0 || (this.list.splice(e, 1), 0)); }

static removeFromId(e) { const t = this.list.findIndex(((t) => Number(t.id) === e)); return this.remove(t); }

static update(e, t) { return !(e < 0 || t === null || (this.list[e].description = t, 0)); }
    } class b {
      static add(e) { e && e.length === 0 ? localStorage.clear() : (e = JSON.stringify(e), localStorage.setItem('list', e)); }

      static get() { return JSON.parse(localStorage.getItem('list')); }

      static update() { this.add(v.list); }
    } const g = (e) => { const t = e.target.parentNode.parentNode.parentNode; const r = Array.from(document.querySelectorAll('.list-item__item')).indexOf(t); t.remove(), v.remove(r), b.add(v.list); }; const y = () => {}; const x = document.querySelector('#list'); const w = b.get(); w && w.length > 0 && (v.list = w.map(((e) => { const t = new h(e.description, v.uniqueId, e.completed); return h.uniqueId += 1, t; })), v.uniqueId = v.list[v.list.length - 1].id + 1, v.list.forEach(((e) => { x.insertBefore(e.createTodoElement(), x.lastChild); }))), document.querySelector('#add_input').addEventListener('keyup', ((e) => { if (e.key === 'Enter' && v.addTodoItem(e.target.value, v.uniqueId)) { v.uniqueId += 1; const t = v.list[v.list.length - 1].createTodoElement(); x.insertBefore(t, x.lastChild), e.target.value = '', b.update(); } })); const E = (e) => { const t = e.querySelector('.fas'); t.classList.toggle('fa-ellipsis-v'), t.classList.toggle('fa-trash-alt'), t.className.includes('fa-ellipsis-v') && (t.removeEventListener('click', g), t.addEventListener('click', y)), t.className.includes('fa-trash-alt') && (t.removeEventListener('click', y), t.addEventListener('click', g)); }; document.addEventListener('click', ((e) => { const t = e.target.closest('.list-item__item'); const r = x.querySelector('li[aria-current="true"]'); t ? t.ariaCurrent === 'false' && r ? (r.setAttribute('aria-current', 'false'), t.setAttribute('aria-current', 'true'), E(r), E(t)) : t.ariaCurrent === 'false' && (t.setAttribute('aria-current', 'true'), E(t)) : r && (r.setAttribute('aria-current', 'false'), E(r)); })); const k = document.createElement('li'); k.className = 'list-item list-item__button-wrapper', k.innerHTML = '\n<button class="btn" type="button">Clear all completed</button>', k.addEventListener('click', (() => { Array.from(x.querySelectorAll('.list-item__item')).forEach(((e) => { e.querySelector('#check').checked && (v.removeFromId(e.id), e.remove()); })), b.update(); })), x.appendChild(k);
  })();
})();